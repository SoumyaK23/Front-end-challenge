{"ast":null,"code":"var _jsxFileName = \"/Users/soumyakrishnamurthy/Documents/Cord/FE Challenge/front-end-test-cord/src/components/checkbox/index.js\";\nimport React from \"react\";\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class CheckBox extends React.Component {\n  // Create a custom checkbox component\n  constructor(props) {\n    super(props);\n\n    this.handleCheckboxChange = event => {\n      this.setState(prevState => ({\n        checked: !prevState.checked\n      }));\n    };\n\n    this.state = {\n      checked: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(CheckboxCont, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nconst CheckboxCont = styled.div`\n  position: relative;\n`;\n_c = CheckboxCont;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckboxCont\");","map":{"version":3,"sources":["/Users/soumyakrishnamurthy/Documents/Cord/FE Challenge/front-end-test-cord/src/components/checkbox/index.js"],"names":["React","styled","CheckBox","Component","constructor","props","handleCheckboxChange","event","setState","prevState","checked","state","render","CheckboxCont","div"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,eAAe,MAAMC,QAAN,SAAuBF,KAAK,CAACG,SAA7B,CAAuC;AACpD;AACAC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAOnBC,oBAPmB,GAOIC,KAAK,IAAI;AAC9B,WAAKC,QAAL,CAAcC,SAAS,KAAK;AAC1BC,QAAAA,OAAO,EAAE,CAACD,SAAS,CAACC;AADM,OAAL,CAAvB;AAGD,KAXkB;;AAEjB,SAAKC,KAAL,GAAa;AACXD,MAAAA,OAAO,EAAE;AADE,KAAb;AAGD;;AAQDE,EAAAA,MAAM,GAAI;AACR,wBACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YADF;AAID;;AApBmD;AAuBtD,MAAMC,YAAY,GAAGZ,MAAM,CAACa,GAAI;AAChC;AACA,CAFA;KAAMD,Y","sourcesContent":["import React from \"react\";\r\nimport styled from 'styled-components';\r\n\r\nexport default class CheckBox extends React.Component {\r\n  // Create a custom checkbox component\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      checked: false\r\n    };\r\n  }\r\n\r\n  handleCheckboxChange = event => {\r\n    this.setState(prevState => ({\r\n      checked: !prevState.checked\r\n    }));\r\n  };\r\n  \r\n  render () {\r\n    return (\r\n      <CheckboxCont>\r\n      </CheckboxCont>\r\n    )\r\n  }\r\n}\r\n\r\nconst CheckboxCont = styled.div`\r\n  position: relative;\r\n`"]},"metadata":{},"sourceType":"module"}