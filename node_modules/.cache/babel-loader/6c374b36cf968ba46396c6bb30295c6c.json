{"ast":null,"code":"var _jsxFileName = \"/Users/soumyakrishnamurthy/Documents/Cord/FE Challenge/front-end-test-cord/src/pages/discover/index.js\";\n\n/* This file contains functions that preload the page with movies list and genres.\r\nWhen searched by name and year, results should be displayed */\nimport React from \"react\";\nimport styled from 'styled-components';\nimport * as fetcher from \"../../fetcher\";\nimport SearchFilters from \"../../components/searchfilter\";\nimport MovieList from \"../../components/movielist\";\nimport Bars from \"../../images/bars.png\";\nimport Times from \"../../images/times.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class Discover extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      menuOpen: false,\n      keyword: '',\n      year: 0,\n      results: [],\n      totalCount: 0,\n      genres: [\n      /* get some genres as example */\n      {\n        id: 28,\n        name: 'Action'\n      }, {\n        id: 12,\n        name: 'Adventure'\n      }, {\n        id: 16,\n        name: 'Animation'\n      }, {\n        id: 35,\n        name: 'Comedy'\n      }, {\n        id: 80,\n        name: 'Crime Film'\n      }, {\n        id: 99,\n        name: 'Documentary'\n      }, {\n        id: 10,\n        name: 'Drama'\n      }, {\n        id: 14,\n        name: 'Family'\n      }, {\n        id: 36,\n        name: 'History'\n      }, {\n        id: 15,\n        name: 'TV Movie'\n      }],\n      ratings: [{\n        id: 7.5,\n        name: 7.5\n      }, {\n        id: 8,\n        name: 8\n      }, {\n        id: 8.5,\n        name: 8.5\n      }, {\n        id: 9,\n        name: 9\n      }, {\n        id: 9.5,\n        name: 9.5\n      }, {\n        id: 10,\n        name: 10\n      }],\n      languages: [{\n        id: 'EN',\n        name: 'English'\n      }, {\n        id: 'he-IN',\n        name: 'Hindi'\n      }, {\n        id: 'zh-CN',\n        name: 'Chinese'\n      }, {\n        id: 'FR',\n        name: 'French'\n      }, {\n        id: 'ES',\n        name: 'Spanish'\n      }]\n    };\n    this.openMenu = this.openMenu.bind(this);\n  } // function to preload genre list and trending movies when page loads\n\n\n  async componentDidMount() {\n    // preload genre list\n    const genresList = await fetcher.getGenresList();\n    this.setState({\n      genreOptions: genresList\n    }); // prelaod trending movies\n\n    const data = await fetcher.getTrendingMovies();\n    this.setState({\n      results: data.results,\n      totalCount: data.total_results\n    });\n  } // function to trigger the API request and load the search results based on the name and year given as parameters\n\n\n  async searchMovies(keyword, year) {\n    const data = await fetcher.getMovies(keyword, year);\n\n    if (data != undefined) {\n      this.setState({\n        results: data.results,\n        totalCount: data.total_results\n      });\n    } else {\n      this.setState({\n        results: [],\n        totalCount: 0\n      });\n    }\n  }\n\n  openMenu() {\n    const links = document.querySelector('#navbar');\n    const menuOpen = this.state;\n    console.log(menuOpen);\n\n    if (!menuOpen.menuOpen) {\n      links.style.display = 'block';\n      this.setState({\n        menuOpen: true\n      });\n    } else {\n      links.style.display = 'none';\n      this.setState({\n        menuOpen: false\n      });\n    }\n  }\n\n  render() {\n    const {\n      genres,\n      languages,\n      ratings,\n      totalCount,\n      results,\n      menuOpen\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        onClick: () => this.openMenu(),\n        children: [/*#__PURE__*/_jsxDEV(Navbars, {\n          src: menuOpen ? Bars : Times,\n          id: \"bars\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 41\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(DiscoverWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(MobilePageTitle, {\n          children: \"Discover\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 9\n        }, this), \" \", /*#__PURE__*/_jsxDEV(MovieFilters, {\n          children: /*#__PURE__*/_jsxDEV(SearchFilters, {\n            genres: genres,\n            ratings: ratings,\n            languages: languages,\n            searchMovies: (keyword, year) => this.searchMovies(keyword, year)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(MovieResults, {\n          children: [totalCount > 0 && /*#__PURE__*/_jsxDEV(TotalCounter, {\n            children: [totalCount, \" results\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(MovieList, {\n            movies: results || []\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true);\n  }\n\n}\nconst DiscoverWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  padding: 40px 40px;\n  @media (max-width: 992px) {\n    flex-direction: column-reverse;\n  }\n`;\n_c = DiscoverWrapper;\nconst TotalCounter = styled.div`\n  font-weight: 900;\n  height: 30px;\n  margin-bottom: 20px;\n`;\n_c2 = TotalCounter;\nconst MovieResults = styled.div`\n  order: 1;\n  flex-basis: 60%;\n  @media (min-width: 769px) {\n    margin-right: 15px;\n  }\n`;\n_c3 = MovieResults;\nconst MovieFilters = styled.div`\n  order: 2;\n  flex-basis: 40%;\n  margin: 40px 0px 20px;\n`;\n_c4 = MovieFilters;\nconst MobilePageTitle = styled.header`\n  order: 3;\n  font-size: 1.6em;\n  font-weight: bold;\n  @media (min-width: 769px) {\n    display: none;\n  }\n`;\n_c5 = MobilePageTitle;\nconst Navbars = styled.img`\nfloat: right;\nmargin: 2em;\nheight: 30px;\nweight:30px;\n`;\n_c6 = Navbars;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"DiscoverWrapper\");\n$RefreshReg$(_c2, \"TotalCounter\");\n$RefreshReg$(_c3, \"MovieResults\");\n$RefreshReg$(_c4, \"MovieFilters\");\n$RefreshReg$(_c5, \"MobilePageTitle\");\n$RefreshReg$(_c6, \"Navbars\");","map":{"version":3,"sources":["/Users/soumyakrishnamurthy/Documents/Cord/FE Challenge/front-end-test-cord/src/pages/discover/index.js"],"names":["React","styled","fetcher","SearchFilters","MovieList","Bars","Times","Discover","Component","constructor","props","state","menuOpen","keyword","year","results","totalCount","genres","id","name","ratings","languages","openMenu","bind","componentDidMount","genresList","getGenresList","setState","genreOptions","data","getTrendingMovies","total_results","searchMovies","getMovies","undefined","links","document","querySelector","console","log","style","display","render","DiscoverWrapper","div","TotalCounter","MovieResults","MovieFilters","MobilePageTitle","header","Navbars","img"],"mappings":"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","sourcesContent":["/* This file contains functions that preload the page with movies list and genres.\r\nWhen searched by name and year, results should be displayed */ \r\n\r\nimport React from \"react\";\r\nimport styled from 'styled-components';\r\n\r\nimport * as fetcher from \"../../fetcher\";\r\n\r\nimport SearchFilters from \"../../components/searchfilter\";\r\nimport MovieList from \"../../components/movielist\";\r\n\r\nimport Bars from \"../../images/bars.png\";\r\nimport Times from \"../../images/times.png\";\r\n\r\nexport default class Discover extends React.Component {\r\n  constructor (props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      menuOpen: false,\r\n      keyword: '',\r\n      year: 0,\r\n      results: [],\r\n      totalCount: 0,\r\n      genres: [ /* get some genres as example */\r\n        {id: 28, name: 'Action'},\r\n        {id: 12, name: 'Adventure'},\r\n        {id: 16, name: 'Animation'},\r\n        {id: 35, name: 'Comedy'},\r\n        {id: 80, name: 'Crime Film'},\r\n        {id: 99, name: 'Documentary'},\r\n        {id: 10, name: 'Drama'},\r\n        {id: 14, name: 'Family'},\r\n        {id: 36, name: 'History'},\r\n        {id: 15, name: 'TV Movie'},\r\n      ],\r\n      ratings: [\r\n        { id: 7.5, name: 7.5 },\r\n        { id: 8, name: 8 },\r\n        { id: 8.5, name: 8.5 },\r\n        { id: 9, name: 9 },\r\n        { id: 9.5, name: 9.5 },\r\n        { id: 10, name: 10 }\r\n      ],\r\n      languages: [\r\n        { id: 'EN', name: 'English' },\r\n        { id: 'he-IN', name: 'Hindi' },\r\n        { id: 'zh-CN', name: 'Chinese' },\r\n        { id: 'FR', name: 'French' },\r\n        { id: 'ES', name: 'Spanish' }\r\n      ]\r\n    };\r\n    this.openMenu = this.openMenu.bind(this)\r\n  }\r\n\r\n  // function to preload genre list and trending movies when page loads\r\n  async componentDidMount() {\r\n    // preload genre list\r\n    const genresList = await fetcher.getGenresList();\r\n    this.setState({ genreOptions: genresList });\r\n\r\n    // prelaod trending movies\r\n    const data = await fetcher.getTrendingMovies();\r\n    this.setState({ results: data.results, totalCount: data.total_results }); \r\n  }\r\n\r\n  // function to trigger the API request and load the search results based on the name and year given as parameters\r\n  async searchMovies(keyword, year) {\r\n    const data = await fetcher.getMovies(keyword, year);\r\n    if (data != undefined) {\r\n      this.setState({\r\n        results: data.results,\r\n        totalCount: data.total_results\r\n      });\r\n    } else {\r\n      this.setState({\r\n        results: [],\r\n        totalCount: 0\r\n      });\r\n    }\r\n  }\r\n\r\n  openMenu() {\r\n    const links = document.querySelector('#navbar')\r\n    const menuOpen = this.state\r\n    console.log(menuOpen);\r\n\r\n    if (!menuOpen.menuOpen) {\r\n      links.style.display = 'block'\r\n      this.setState({ menuOpen: true })\r\n    } else {\r\n      links.style.display = 'none'\r\n      this.setState({ menuOpen: false })\r\n    }\r\n\r\n  }\r\n\r\n  render () {\r\n    const { genres, languages, ratings, totalCount, results, menuOpen } = this.state;\r\n\r\n    return (\r\n      <>\r\n      <a onClick={()=>this.openMenu()} ><Navbars src={menuOpen? Bars : Times} id=\"bars\" /> </a>\r\n      <DiscoverWrapper>\r\n        <MobilePageTitle>Discover</MobilePageTitle> {/* MobilePageTitle should become visible on small screens & mobile devices*/}\r\n        <MovieFilters>\r\n          <SearchFilters \r\n            genres={genres} \r\n            ratings={ratings}  \r\n            languages={languages}\r\n            searchMovies={(keyword, year) => this.searchMovies(keyword, year)}\r\n          />\r\n        </MovieFilters>\r\n        <MovieResults>\r\n          { totalCount > 0 && <TotalCounter>{totalCount} results</TotalCounter>}\r\n          <MovieList \r\n            movies={results || []}\r\n          />\r\n        </MovieResults>\r\n      </DiscoverWrapper>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nconst DiscoverWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  padding: 40px 40px;\r\n  @media (max-width: 992px) {\r\n    flex-direction: column-reverse;\r\n  }\r\n`;\r\n\r\nconst TotalCounter = styled.div`\r\n  font-weight: 900;\r\n  height: 30px;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst MovieResults = styled.div`\r\n  order: 1;\r\n  flex-basis: 60%;\r\n  @media (min-width: 769px) {\r\n    margin-right: 15px;\r\n  }\r\n`;\r\n\r\nconst MovieFilters = styled.div`\r\n  order: 2;\r\n  flex-basis: 40%;\r\n  margin: 40px 0px 20px;\r\n`;\r\n\r\nconst MobilePageTitle = styled.header`\r\n  order: 3;\r\n  font-size: 1.6em;\r\n  font-weight: bold;\r\n  @media (min-width: 769px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst Navbars = styled.img`\r\nfloat: right;\r\nmargin: 2em;\r\nheight: 30px;\r\nweight:30px;\r\n`;\r\n\r\n"]},"metadata":{},"sourceType":"module"}