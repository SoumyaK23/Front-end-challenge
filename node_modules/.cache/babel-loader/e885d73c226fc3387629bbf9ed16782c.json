{"ast":null,"code":"var _jsxFileName = \"/Users/soumyakrishnamurthy/Documents/Cord/FE Challenge/front-end-test-cord/src/components/checkbox/index.js\";\nimport React from \"react\";\nimport styled from 'styled-components';\nimport * as colors from \"../../colors\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class CheckBox extends React.Component {\n  // Create a custom checkbox component\n  constructor(props) {\n    super(props);\n\n    this.handleCheckboxChange = event => {\n      this.setState(prevState => ({\n        checked: !prevState.checked\n      }));\n    };\n\n    this.state = {\n      checked: false\n    };\n  }\n\n  render() {\n    const filter = this.props.filter;\n    const checked = this.state.checked;\n    console.log(this.props.filter.name);\n    return /*#__PURE__*/_jsxDEV(CheckboxContainer, {\n      children: /*#__PURE__*/_jsxDEV(StyledCheckbox, {\n        checked: checked,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: this.props.filter.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nconst CheckboxContainer = styled.div`\n  display: inline-block;\n  vertical-align: middle;\n  margin: 5px;\n  font-weight: 300;\n  user-select: none;\n`;\n_c = CheckboxContainer;\nconst StyledCheckbox = styled.div`\n  display: inline-block;\n  width: 16px;\n  height: 16px;\n  margin-right: 15px;\n  background: ${props => props.checked ? \"#f5f5f5\" : \"white\"};\n  border-radius: 3px;\n  border: solid 1px ${colors.fontColor};\n  transition: all 300ms;\n  cursor: pointer;\n\n  :hover {\n    background: #f5f5f5;\n  }\n  `;\n_c2 = StyledCheckbox;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CheckboxContainer\");\n$RefreshReg$(_c2, \"StyledCheckbox\");","map":{"version":3,"sources":["/Users/soumyakrishnamurthy/Documents/Cord/FE Challenge/front-end-test-cord/src/components/checkbox/index.js"],"names":["React","styled","colors","CheckBox","Component","constructor","props","handleCheckboxChange","event","setState","prevState","checked","state","render","filter","console","log","name","CheckboxContainer","div","StyledCheckbox","fontColor"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAO,KAAKC,MAAZ,MAAwB,cAAxB;;AAEA,eAAe,MAAMC,QAAN,SAAuBH,KAAK,CAACI,SAA7B,CAAuC;AACpD;AACAC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAOnBC,oBAPmB,GAOIC,KAAK,IAAI;AAC9B,WAAKC,QAAL,CAAcC,SAAS,KAAK;AAC1BC,QAAAA,OAAO,EAAE,CAACD,SAAS,CAACC;AADM,OAAL,CAAvB;AAGD,KAXkB;;AAEjB,SAAKC,KAAL,GAAa;AACXD,MAAAA,OAAO,EAAE;AADE,KAAb;AAGD;;AAQDE,EAAAA,MAAM,GAAG;AACP,UAAMC,MAAM,GAAG,KAAKR,KAAL,CAAWQ,MAA1B;AACA,UAAMH,OAAO,GAAG,KAAKC,KAAL,CAAWD,OAA3B;AACJI,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKV,KAAL,CAAWQ,MAAX,CAAkBG,IAA9B;AACI,wBACE,QAAC,iBAAD;AAAA,6BACE,QAAC,cAAD;AAAgB,QAAA,OAAO,EAAEN,OAAzB;AAAA,+BACE;AAAA,oBAAO,KAAKL,KAAL,CAAWQ,MAAX,CAAkBG;AAAzB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AA1BmD;AA6BtD,MAAMC,iBAAiB,GAAGjB,MAAM,CAACkB,GAAI;AACrC;AACA;AACA;AACA;AACA;AACA,CANA;KAAMD,iB;AAQN,MAAME,cAAc,GAAGnB,MAAM,CAACkB,GAAI;AAClC;AACA;AACA;AACA;AACA,gBAAgBb,KAAK,IAAKA,KAAK,CAACK,OAAN,GAAgB,SAAhB,GAA4B,OAAS;AAC/D;AACA,sBAAsBT,MAAM,CAACmB,SAAU;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,GAdA;MAAMD,c","sourcesContent":["import React from \"react\";\r\nimport styled from 'styled-components';\r\nimport * as colors from \"../../colors\";\r\n\r\nexport default class CheckBox extends React.Component {\r\n  // Create a custom checkbox component\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      checked: false\r\n    };\r\n  }\r\n\r\n  handleCheckboxChange = event => {\r\n    this.setState(prevState => ({\r\n      checked: !prevState.checked\r\n    }));\r\n  };\r\n  \r\n  render() {\r\n    const filter = this.props.filter;\r\n    const checked = this.state.checked;\r\nconsole.log(this.props.filter.name);\r\n    return (\r\n      <CheckboxContainer>\r\n        <StyledCheckbox checked={checked}>\r\n          <span>{this.props.filter.name}</span>\r\n        </StyledCheckbox>\r\n      </CheckboxContainer>\r\n    );\r\n  }\r\n}\r\n\r\nconst CheckboxContainer = styled.div`\r\n  display: inline-block;\r\n  vertical-align: middle;\r\n  margin: 5px;\r\n  font-weight: 300;\r\n  user-select: none;\r\n`;\r\n\r\nconst StyledCheckbox = styled.div`\r\n  display: inline-block;\r\n  width: 16px;\r\n  height: 16px;\r\n  margin-right: 15px;\r\n  background: ${props => (props.checked ? \"#f5f5f5\" : \"white\")};\r\n  border-radius: 3px;\r\n  border: solid 1px ${colors.fontColor};\r\n  transition: all 300ms;\r\n  cursor: pointer;\r\n\r\n  :hover {\r\n    background: #f5f5f5;\r\n  }\r\n  `;\r\n"]},"metadata":{},"sourceType":"module"}