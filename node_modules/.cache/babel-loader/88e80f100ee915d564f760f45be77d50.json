{"ast":null,"code":"var _jsxFileName = \"/Users/soumyakrishnamurthy/Documents/Cord/FE Challenge/front-end-test-cord/src/components/checkbox/index.js\";\nimport React from \"react\";\nimport styled from 'styled-components';\nimport * as colors from \"../../colors\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class CheckBox extends React.Component {\n  // Create a custom checkbox component\n  constructor(props) {\n    super(props);\n\n    this.handleCheckboxChange = event => {\n      this.setState(prevState => ({\n        checked: !prevState.checked\n      }));\n    };\n\n    this.state = {\n      checked: false\n    };\n  }\n\n  render() {\n    const filter = this.props.filter;\n    const checked = this.state.checked;\n    return /*#__PURE__*/_jsxDEV(StyledFilterSection, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filterHeader\",\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: open ? faMinus : faPlus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"\",\n          \"data-toggle\": \"collapse\",\n          \"data-target\": `.collapse.${title}Div`,\n          \"data-text\": \"Collapse\",\n          onClick: this.toggleCollapse,\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${title}Div filterBody ` + (open && `inView`),\n        children: data.map(d => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: d,\n            name: d\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: d,\n            children: d\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)]\n        }, d, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nconst CheckboxContainer = styled.div`\n  display: inline-block;\n  vertical-align: middle;\n  margin: 5px;\n  font-weight: 300;\n  user-select: none;\n`;\nconst Icon = styled.svg`\n  fill: none;\n  stroke: ${colors.primaryColor};\n  stroke-width: 4px;\n`; // Hide checkbox visually but remain accessible to screen readers.\n\nconst HiddenCheckbox = styled.input.attrs({\n  type: \"checkbox\"\n})`\n  border: 0;\n  clip: rect(0 0 0 0);\n  clippath: inset(50%);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  white-space: nowrap;\n  width: 1px;\n`;\nconst StyledCheckbox = styled.div`\n  display: inline-block;\n  width: 16px;\n  height: 16px;\n  margin-right: 15px;\n  background: ${props => props.checked ? \"#f5f5f5\" : \"white\"};\n  border-radius: 3px;\n  border: solid 1px ${colors.fontColor};\n  transition: all 300ms;\n  cursor: pointer;\n\n  :hover {\n    background: #f5f5f5;\n  }\n\n  ${Icon} {\n    visibility: ${props => props.checked ? \"visible\" : \"hidden\"};\n  }\n`;","map":{"version":3,"sources":["/Users/soumyakrishnamurthy/Documents/Cord/FE Challenge/front-end-test-cord/src/components/checkbox/index.js"],"names":["React","styled","colors","CheckBox","Component","constructor","props","handleCheckboxChange","event","setState","prevState","checked","state","render","filter","open","faMinus","faPlus","title","toggleCollapse","data","map","d","CheckboxContainer","div","Icon","svg","primaryColor","HiddenCheckbox","input","attrs","type","StyledCheckbox","fontColor"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAO,KAAKC,MAAZ,MAAwB,cAAxB;;AAEA,eAAe,MAAMC,QAAN,SAAuBH,KAAK,CAACI,SAA7B,CAAuC;AACpD;AACAC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAOnBC,oBAPmB,GAOIC,KAAK,IAAI;AAC9B,WAAKC,QAAL,CAAcC,SAAS,KAAK;AAC1BC,QAAAA,OAAO,EAAE,CAACD,SAAS,CAACC;AADM,OAAL,CAAvB;AAGD,KAXkB;;AAEjB,SAAKC,KAAL,GAAa;AACXD,MAAAA,OAAO,EAAE;AADE,KAAb;AAGD;;AAQDE,EAAAA,MAAM,GAAG;AACP,UAAMC,MAAM,GAAG,KAAKR,KAAL,CAAWQ,MAA1B;AACA,UAAMH,OAAO,GAAG,KAAKC,KAAL,CAAWD,OAA3B;AACA,wBACE,QAAC,mBAAD;AAAA,8BACA;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACE,QAAC,eAAD;AAAiB,UAAA,IAAI,EAAEI,IAAI,GAAGC,OAAH,GAAaC;AAAxC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAG,UAAA,SAAS,EAAC,EAAb;AACE,yBAAY,UADd;AAEE,yBAAc,aAAYC,KAAM,KAFlC;AAGE,uBAAU,UAHZ;AAIE,UAAA,OAAO,EAAE,KAAKC,cAJhB;AAAA,oBAMGD;AANH;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAYA;AAAK,QAAA,SAAS,EAAG,GAAEA,KAAM,iBAAT,IAA6BH,IAAI,IAAK,QAAtC,CAAhB;AAAA,kBAEEK,IAAI,CAACC,GAAL,CAASC,CAAC,iBACR;AAAa,UAAA,SAAS,EAAC,QAAvB;AAAA,kCACE;AAAO,YAAA,IAAI,EAAC,UAAZ;AAAuB,YAAA,EAAE,EAAEA,CAA3B;AAA8B,YAAA,IAAI,EAAEA;AAApC;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAO,YAAA,OAAO,EAAEA,CAAhB;AAAA,sBAAoBA;AAApB;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA,WAAUA,CAAV;AAAA;AAAA;AAAA;AAAA,gBADF;AAFF;AAAA;AAAA;AAAA;AAAA,cAZA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAyBD;;AA3CmD;AA8CtD,MAAMC,iBAAiB,GAAGtB,MAAM,CAACuB,GAAI;AACrC;AACA;AACA;AACA;AACA;AACA,CANA;AAQA,MAAMC,IAAI,GAAGxB,MAAM,CAACyB,GAAI;AACxB;AACA,YAAYxB,MAAM,CAACyB,YAAa;AAChC;AACA,CAJA,C,CAMA;;AACA,MAAMC,cAAc,GAAG3B,MAAM,CAAC4B,KAAP,CAAaC,KAAb,CAAmB;AAAEC,EAAAA,IAAI,EAAE;AAAR,CAAnB,CAAyC;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXA;AAaA,MAAMC,cAAc,GAAG/B,MAAM,CAACuB,GAAI;AAClC;AACA;AACA;AACA;AACA,gBAAgBlB,KAAK,IAAKA,KAAK,CAACK,OAAN,GAAgB,SAAhB,GAA4B,OAAS;AAC/D;AACA,sBAAsBT,MAAM,CAAC+B,SAAU;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIR,IAAK;AACT,kBAAkBnB,KAAK,IAAKA,KAAK,CAACK,OAAN,GAAgB,SAAhB,GAA4B,QAAU;AAClE;AACA,CAlBA","sourcesContent":["import React from \"react\";\r\nimport styled from 'styled-components';\r\nimport * as colors from \"../../colors\";\r\n\r\nexport default class CheckBox extends React.Component {\r\n  // Create a custom checkbox component\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      checked: false\r\n    };\r\n  }\r\n\r\n  handleCheckboxChange = event => {\r\n    this.setState(prevState => ({\r\n      checked: !prevState.checked\r\n    }));\r\n  };\r\n  \r\n  render() {\r\n    const filter = this.props.filter;\r\n    const checked = this.state.checked;\r\n    return (\r\n      <StyledFilterSection>\r\n      <div className='filterHeader'>\r\n        <FontAwesomeIcon icon={open ? faMinus : faPlus}/>\r\n        <a className=''\r\n          data-toggle=\"collapse\"\r\n          data-target={`.collapse.${title}Div`}\r\n          data-text=\"Collapse\"\r\n          onClick={this.toggleCollapse}\r\n          >\r\n          {title}\r\n        </a>\r\n      </div>\r\n      <div className={`${title}Div filterBody ` + (open && `inView`)}>\r\n      {\r\n        data.map(d => (\r\n          <div key={d} className='filter'>\r\n            <input type='checkbox' id={d} name={d} />\r\n            <label htmlFor={d}>{d}</label>\r\n          </div>\r\n          ))\r\n        }\r\n      </div>\r\n    </StyledFilterSection>\r\n    );\r\n  }\r\n}\r\n\r\nconst CheckboxContainer = styled.div`\r\n  display: inline-block;\r\n  vertical-align: middle;\r\n  margin: 5px;\r\n  font-weight: 300;\r\n  user-select: none;\r\n`;\r\n\r\nconst Icon = styled.svg`\r\n  fill: none;\r\n  stroke: ${colors.primaryColor};\r\n  stroke-width: 4px;\r\n`;\r\n\r\n// Hide checkbox visually but remain accessible to screen readers.\r\nconst HiddenCheckbox = styled.input.attrs({ type: \"checkbox\" })`\r\n  border: 0;\r\n  clip: rect(0 0 0 0);\r\n  clippath: inset(50%);\r\n  height: 1px;\r\n  margin: -1px;\r\n  overflow: hidden;\r\n  padding: 0;\r\n  position: absolute;\r\n  white-space: nowrap;\r\n  width: 1px;\r\n`;\r\n\r\nconst StyledCheckbox = styled.div`\r\n  display: inline-block;\r\n  width: 16px;\r\n  height: 16px;\r\n  margin-right: 15px;\r\n  background: ${props => (props.checked ? \"#f5f5f5\" : \"white\")};\r\n  border-radius: 3px;\r\n  border: solid 1px ${colors.fontColor};\r\n  transition: all 300ms;\r\n  cursor: pointer;\r\n\r\n  :hover {\r\n    background: #f5f5f5;\r\n  }\r\n\r\n  ${Icon} {\r\n    visibility: ${props => (props.checked ? \"visible\" : \"hidden\")};\r\n  }\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}