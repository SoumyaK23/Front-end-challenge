{"ast":null,"code":"var _jsxFileName = \"/Users/soumyakrishnamurthy/Documents/Cord/FE Challenge/front-end-test-cord/src/components/checkbox/index.js\";\nimport React from \"react\";\nimport styled from 'styled-components';\nimport * as colors from \"../../colors\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class CheckBox extends React.Component {\n  // Create a custom checkbox component\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false\n    };\n    this.toggleCollapse = this.toggleCollapse.bind(this);\n  }\n\n  toggleCollapse() {\n    const {\n      open\n    } = this.state;\n    this.setState({\n      open: !open\n    }, () => console.log(open));\n  }\n\n  render() {\n    const {\n      title,\n      data\n    } = this.props;\n    console.log(title);\n    const {\n      open\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(CheckboxContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filterHeader\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"\",\n          \"data-toggle\": \"collapse\",\n          \"data-target\": `.collapse.${title}Div`,\n          \"data-text\": \"Collapse\",\n          onClick: this.toggleCollapse,\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${title}Div filterBody ` + (open && `inView`),\n        children: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nconst CheckboxContainer = styled.div`\n  display: inline-block;\n  vertical-align: middle;\n  margin: 5px;\n  font-weight: 300;\n  user-select: none;\n`;\n_c = CheckboxContainer;\nconst Icon = styled.svg`\n  fill: none;\n  stroke: ${colors.primaryColor};\n  stroke-width: 4px;\n`; // Hide checkbox visually but remain accessible to screen readers.\n\nconst HiddenCheckbox = styled.input.attrs({\n  type: \"checkbox\"\n})`\n  border: 0;\n  clip: rect(0 0 0 0);\n  clippath: inset(50%);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  white-space: nowrap;\n  width: 1px;\n`;\nconst StyledCheckbox = styled.div`\n  display: inline-block;\n  width: 16px;\n  height: 16px;\n  margin-right: 15px;\n  background: ${props => props.checked ? \"#f5f5f5\" : \"white\"};\n  border-radius: 3px;\n  border: solid 1px ${colors.fontColor};\n  transition: all 300ms;\n  cursor: pointer;\n\n  :hover {\n    background: #f5f5f5;\n  }\n\n  ${Icon} {\n    visibility: ${props => props.checked ? \"visible\" : \"hidden\"};\n  }\n`;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckboxContainer\");","map":{"version":3,"sources":["/Users/soumyakrishnamurthy/Documents/Cord/FE Challenge/front-end-test-cord/src/components/checkbox/index.js"],"names":["React","styled","colors","CheckBox","Component","constructor","props","state","open","toggleCollapse","bind","setState","console","log","render","title","data","CheckboxContainer","div","Icon","svg","primaryColor","HiddenCheckbox","input","attrs","type","StyledCheckbox","checked","fontColor"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAO,KAAKC,MAAZ,MAAwB,cAAxB;;AAEA,eAAe,MAAMC,QAAN,SAAuBH,KAAK,CAACI,SAA7B,CAAuC;AACpD;AACAC,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAClB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE;AADK,KAAb;AAGA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;AACD;;AAEDD,EAAAA,cAAc,GAAG;AACf,UAAM;AAAED,MAAAA;AAAF,QAAW,KAAKD,KAAtB;AACA,SAAKI,QAAL,CAAc;AAAEH,MAAAA,IAAI,EAAE,CAACA;AAAT,KAAd,EAA8B,MAAMI,OAAO,CAACC,GAAR,CAAYL,IAAZ,CAApC;AACD;;AAEDM,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAkB,KAAKV,KAA7B;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACA,UAAM;AAAEP,MAAAA;AAAF,QAAW,KAAKD,KAAtB;AACA,wBACE,QAAC,iBAAD;AAAA,8BACA;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,+BACE;AAAG,UAAA,SAAS,EAAC,EAAb;AACE,yBAAY,UADd;AAEE,yBAAc,aAAYQ,KAAM,KAFlC;AAGE,uBAAU,UAHZ;AAIE,UAAA,OAAO,EAAE,KAAKN,cAJhB;AAAA,oBAMGM;AANH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADA,eAWA;AAAK,QAAA,SAAS,EAAG,GAAEA,KAAM,iBAAT,IAA6BP,IAAI,IAAK,QAAtC,CAAhB;AAAA,kBACLQ;AADK;AAAA;AAAA;AAAA;AAAA,cAXA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAiBD;;AApCmD;AAuCtD,MAAMC,iBAAiB,GAAGhB,MAAM,CAACiB,GAAI;AACrC;AACA;AACA;AACA;AACA;AACA,CANA;KAAMD,iB;AAQN,MAAME,IAAI,GAAGlB,MAAM,CAACmB,GAAI;AACxB;AACA,YAAYlB,MAAM,CAACmB,YAAa;AAChC;AACA,CAJA,C,CAMA;;AACA,MAAMC,cAAc,GAAGrB,MAAM,CAACsB,KAAP,CAAaC,KAAb,CAAmB;AAAEC,EAAAA,IAAI,EAAE;AAAR,CAAnB,CAAyC;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXA;AAaA,MAAMC,cAAc,GAAGzB,MAAM,CAACiB,GAAI;AAClC;AACA;AACA;AACA;AACA,gBAAgBZ,KAAK,IAAKA,KAAK,CAACqB,OAAN,GAAgB,SAAhB,GAA4B,OAAS;AAC/D;AACA,sBAAsBzB,MAAM,CAAC0B,SAAU;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIT,IAAK;AACT,kBAAkBb,KAAK,IAAKA,KAAK,CAACqB,OAAN,GAAgB,SAAhB,GAA4B,QAAU;AAClE;AACA,CAlBA","sourcesContent":["import React from \"react\";\r\nimport styled from 'styled-components';\r\nimport * as colors from \"../../colors\";\r\n\r\nexport default class CheckBox extends React.Component {\r\n  // Create a custom checkbox component\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n      open: false\r\n    }\r\n    this.toggleCollapse = this.toggleCollapse.bind(this)\r\n  }\r\n\r\n  toggleCollapse() {\r\n    const { open } = this.state\r\n    this.setState({ open: !open}, () => console.log(open))\r\n  }\r\n  \r\n  render() {\r\n    const { title, data } = this.props\r\n    console.log(title);\r\n    const { open } = this.state\r\n    return (\r\n      <CheckboxContainer>\r\n      <div className='filterHeader'>\r\n        <a className=''\r\n          data-toggle=\"collapse\"\r\n          data-target={`.collapse.${title}Div`}\r\n          data-text=\"Collapse\"\r\n          onClick={this.toggleCollapse}\r\n          >\r\n          {title}\r\n        </a>\r\n      </div>\r\n      <div className={`${title}Div filterBody ` + (open && `inView`)}>\r\n{data}\r\n      </div>\r\n      </CheckboxContainer>\r\n    );\r\n  }\r\n}\r\n\r\nconst CheckboxContainer = styled.div`\r\n  display: inline-block;\r\n  vertical-align: middle;\r\n  margin: 5px;\r\n  font-weight: 300;\r\n  user-select: none;\r\n`;\r\n\r\nconst Icon = styled.svg`\r\n  fill: none;\r\n  stroke: ${colors.primaryColor};\r\n  stroke-width: 4px;\r\n`;\r\n\r\n// Hide checkbox visually but remain accessible to screen readers.\r\nconst HiddenCheckbox = styled.input.attrs({ type: \"checkbox\" })`\r\n  border: 0;\r\n  clip: rect(0 0 0 0);\r\n  clippath: inset(50%);\r\n  height: 1px;\r\n  margin: -1px;\r\n  overflow: hidden;\r\n  padding: 0;\r\n  position: absolute;\r\n  white-space: nowrap;\r\n  width: 1px;\r\n`;\r\n\r\nconst StyledCheckbox = styled.div`\r\n  display: inline-block;\r\n  width: 16px;\r\n  height: 16px;\r\n  margin-right: 15px;\r\n  background: ${props => (props.checked ? \"#f5f5f5\" : \"white\")};\r\n  border-radius: 3px;\r\n  border: solid 1px ${colors.fontColor};\r\n  transition: all 300ms;\r\n  cursor: pointer;\r\n\r\n  :hover {\r\n    background: #f5f5f5;\r\n  }\r\n\r\n  ${Icon} {\r\n    visibility: ${props => (props.checked ? \"visible\" : \"hidden\")};\r\n  }\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}