{"ast":null,"code":"var _jsxFileName = \"/Users/soumyakrishnamurthy/Documents/Cord/FE Challenge/front-end-test-cord/src/components/checkbox/index.js\";\nimport React from \"react\";\nimport styled from 'styled-components';\nimport * as colors from \"../../colors\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class CheckBox extends React.Component {\n  // Create a custom checkbox component\n  constructor(props) {\n    super(props);\n\n    this.handleCheckboxChange = event => {\n      this.setState(prevState => ({\n        checked: !prevState.checked\n      }));\n    };\n\n    this.state = {\n      checked: false\n    };\n  }\n\n  render() {\n    const {\n      filters,\n      title\n    } = this.props;\n    console.log(this.props.filter);\n    const {\n      open\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(CheckboxContainer, {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: filter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nconst CheckboxContainer = styled.div`\n  display: inline-block;\n  vertical-align: middle;\n  margin: 5px;\n  font-weight: 300;\n  user-select: none;\n`;\n_c = CheckboxContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckboxContainer\");","map":{"version":3,"sources":["/Users/soumyakrishnamurthy/Documents/Cord/FE Challenge/front-end-test-cord/src/components/checkbox/index.js"],"names":["React","styled","colors","CheckBox","Component","constructor","props","handleCheckboxChange","event","setState","prevState","checked","state","render","filters","title","console","log","filter","open","CheckboxContainer","div"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAO,KAAKC,MAAZ,MAAwB,cAAxB;;AAEA,eAAe,MAAMC,QAAN,SAAuBH,KAAK,CAACI,SAA7B,CAAuC;AACpD;AACAC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAOnBC,oBAPmB,GAOIC,KAAK,IAAI;AAC9B,WAAKC,QAAL,CAAcC,SAAS,KAAK;AAC1BC,QAAAA,OAAO,EAAE,CAACD,SAAS,CAACC;AADM,OAAL,CAAvB;AAGD,KAXkB;;AAEjB,SAAKC,KAAL,GAAa;AACXD,MAAAA,OAAO,EAAE;AADE,KAAb;AAGD;;AAQDE,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,OAAF;AAAWC,MAAAA;AAAX,QAAqB,KAAKT,KAAhC;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKX,KAAL,CAAWY,MAAvB;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,KAAKP,KAAtB;AAEA,wBACE,QAAC,iBAAD;AAAA,6BACJ;AAAA,kBAAOM;AAAP;AAAA;AAAA;AAAA;AAAA;AADI;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAzBmD;AA4BtD,MAAME,iBAAiB,GAAGnB,MAAM,CAACoB,GAAI;AACrC;AACA;AACA;AACA;AACA;AACA,CANA;KAAMD,iB","sourcesContent":["import React from \"react\";\r\nimport styled from 'styled-components';\r\nimport * as colors from \"../../colors\";\r\n\r\nexport default class CheckBox extends React.Component {\r\n  // Create a custom checkbox component\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      checked: false\r\n    };\r\n  }\r\n\r\n  handleCheckboxChange = event => {\r\n    this.setState(prevState => ({\r\n      checked: !prevState.checked\r\n    }));\r\n  };\r\n  \r\n  render() {\r\n    const { filters, title } = this.props;\r\n    console.log(this.props.filter);\r\n    const { open } = this.state\r\n\r\n    return (\r\n      <CheckboxContainer>\r\n  <span>{filter}</span>\r\n      </CheckboxContainer>\r\n    );\r\n  }\r\n}\r\n\r\nconst CheckboxContainer = styled.div`\r\n  display: inline-block;\r\n  vertical-align: middle;\r\n  margin: 5px;\r\n  font-weight: 300;\r\n  user-select: none;\r\n`;\r\n\r\n"]},"metadata":{},"sourceType":"module"}