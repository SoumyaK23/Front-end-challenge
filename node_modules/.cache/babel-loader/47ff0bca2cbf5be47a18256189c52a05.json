{"ast":null,"code":"var _jsxFileName = \"/Users/soumyakrishnamurthy/Documents/Cord/FE Challenge/front-end-test-cord/src/components/checkbox/index.js\";\nimport React from \"react\";\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class CheckBox extends React.Component {\n  // Create a custom checkbox component\n  constructor(props) {\n    super(props);\n\n    this.handleCheckboxChange = event => {\n      this.setState(prevState => ({\n        checked: !prevState.checked\n      }));\n    };\n\n    this.state = {\n      checked: false\n    };\n  }\n\n  render() {\n    const filter = this.props.filter;\n    const checked = this.state.checked;\n    return /*#__PURE__*/_jsxDEV(CheckboxContainer, {\n      checked: this.state.checked,\n      onClick: this.handleCheckboxChange,\n      children: [/*#__PURE__*/_jsxDEV(HiddenCheckbox, {\n        checked: checked\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledCheckbox, {\n        checked: checked,\n        children: /*#__PURE__*/_jsxDEV(Icon, {\n          viewBox: \"0 0 24 24\",\n          children: /*#__PURE__*/_jsxDEV(\"polyline\", {\n            points: \"20 6 9 17 4 12\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: filter.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nconst CheckboxContainer = styled.div`\n  display: inline-block;\n  vertical-align: middle;\n  margin: 5px;\n  font-weight: 300;\n  user-select: none;\n`;\n_c = CheckboxContainer;\nconst Icon = styled.svg`\n  fill: none;\n  stroke: ${colors.primaryColor};\n  stroke-width: 4px;\n`; // Hide checkbox visually but remain accessible to screen readers.\n\n_c2 = Icon;\nconst HiddenCheckbox = styled.input.attrs({\n  type: \"checkbox\"\n})`\n  border: 0;\n  clip: rect(0 0 0 0);\n  clippath: inset(50%);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  white-space: nowrap;\n  width: 1px;\n`;\n_c3 = HiddenCheckbox;\nconst StyledCheckbox = styled.div`\n  display: inline-block;\n  width: 16px;\n  height: 16px;\n  margin-right: 15px;\n  background: ${props => props.checked ? \"#f5f5f5\" : \"white\"};\n  border-radius: 3px;\n  border: solid 1px ${colors.fontColor};\n  transition: all 300ms;\n  cursor: pointer;\n\n  :hover {\n    background: #f5f5f5;\n  }\n\n  ${Icon} {\n    visibility: ${props => props.checked ? \"visible\" : \"hidden\"};\n  }\n`;\n_c4 = StyledCheckbox;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"CheckboxContainer\");\n$RefreshReg$(_c2, \"Icon\");\n$RefreshReg$(_c3, \"HiddenCheckbox\");\n$RefreshReg$(_c4, \"StyledCheckbox\");","map":{"version":3,"sources":["/Users/soumyakrishnamurthy/Documents/Cord/FE Challenge/front-end-test-cord/src/components/checkbox/index.js"],"names":["React","styled","CheckBox","Component","constructor","props","handleCheckboxChange","event","setState","prevState","checked","state","render","filter","name","CheckboxContainer","div","Icon","svg","colors","primaryColor","HiddenCheckbox","input","attrs","type","StyledCheckbox","fontColor"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,eAAe,MAAMC,QAAN,SAAuBF,KAAK,CAACG,SAA7B,CAAuC;AACpD;AACAC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAOnBC,oBAPmB,GAOIC,KAAK,IAAI;AAC9B,WAAKC,QAAL,CAAcC,SAAS,KAAK;AAC1BC,QAAAA,OAAO,EAAE,CAACD,SAAS,CAACC;AADM,OAAL,CAAvB;AAGD,KAXkB;;AAEjB,SAAKC,KAAL,GAAa;AACXD,MAAAA,OAAO,EAAE;AADE,KAAb;AAGD;;AAQDE,EAAAA,MAAM,GAAG;AACP,UAAMC,MAAM,GAAG,KAAKR,KAAL,CAAWQ,MAA1B;AACA,UAAMH,OAAO,GAAG,KAAKC,KAAL,CAAWD,OAA3B;AACA,wBACE,QAAC,iBAAD;AACE,MAAA,OAAO,EAAE,KAAKC,KAAL,CAAWD,OADtB;AAEE,MAAA,OAAO,EAAE,KAAKJ,oBAFhB;AAAA,8BAIE,QAAC,cAAD;AAAgB,QAAA,OAAO,EAAEI;AAAzB;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE,QAAC,cAAD;AAAgB,QAAA,OAAO,EAAEA,OAAzB;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,OAAO,EAAC,WAAd;AAAA,iCACE;AAAU,YAAA,MAAM,EAAC;AAAjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cALF,eAUE;AAAA,kBAAOG,MAAM,CAACC;AAAd;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAcD;;AAhCmD;AAmCtD,MAAMC,iBAAiB,GAAGd,MAAM,CAACe,GAAI;AACrC;AACA;AACA;AACA;AACA;AACA,CANA;KAAMD,iB;AAQN,MAAME,IAAI,GAAGhB,MAAM,CAACiB,GAAI;AACxB;AACA,YAAYC,MAAM,CAACC,YAAa;AAChC;AACA,CAJA,C,CAMA;;MANMH,I;AAON,MAAMI,cAAc,GAAGpB,MAAM,CAACqB,KAAP,CAAaC,KAAb,CAAmB;AAAEC,EAAAA,IAAI,EAAE;AAAR,CAAnB,CAAyC;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXA;MAAMH,c;AAaN,MAAMI,cAAc,GAAGxB,MAAM,CAACe,GAAI;AAClC;AACA;AACA;AACA;AACA,gBAAgBX,KAAK,IAAKA,KAAK,CAACK,OAAN,GAAgB,SAAhB,GAA4B,OAAS;AAC/D;AACA,sBAAsBS,MAAM,CAACO,SAAU;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIT,IAAK;AACT,kBAAkBZ,KAAK,IAAKA,KAAK,CAACK,OAAN,GAAgB,SAAhB,GAA4B,QAAU;AAClE;AACA,CAlBA;MAAMe,c","sourcesContent":["import React from \"react\";\r\nimport styled from 'styled-components';\r\n\r\nexport default class CheckBox extends React.Component {\r\n  // Create a custom checkbox component\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      checked: false\r\n    };\r\n  }\r\n\r\n  handleCheckboxChange = event => {\r\n    this.setState(prevState => ({\r\n      checked: !prevState.checked\r\n    }));\r\n  };\r\n  \r\n  render() {\r\n    const filter = this.props.filter;\r\n    const checked = this.state.checked;\r\n    return (\r\n      <CheckboxContainer\r\n        checked={this.state.checked}\r\n        onClick={this.handleCheckboxChange}\r\n      >\r\n        <HiddenCheckbox checked={checked} />\r\n        <StyledCheckbox checked={checked}>\r\n          <Icon viewBox=\"0 0 24 24\">\r\n            <polyline points=\"20 6 9 17 4 12\" />\r\n          </Icon>\r\n        </StyledCheckbox>\r\n        <span>{filter.name}</span>\r\n      </CheckboxContainer>\r\n    );\r\n  }\r\n}\r\n\r\nconst CheckboxContainer = styled.div`\r\n  display: inline-block;\r\n  vertical-align: middle;\r\n  margin: 5px;\r\n  font-weight: 300;\r\n  user-select: none;\r\n`;\r\n\r\nconst Icon = styled.svg`\r\n  fill: none;\r\n  stroke: ${colors.primaryColor};\r\n  stroke-width: 4px;\r\n`;\r\n\r\n// Hide checkbox visually but remain accessible to screen readers.\r\nconst HiddenCheckbox = styled.input.attrs({ type: \"checkbox\" })`\r\n  border: 0;\r\n  clip: rect(0 0 0 0);\r\n  clippath: inset(50%);\r\n  height: 1px;\r\n  margin: -1px;\r\n  overflow: hidden;\r\n  padding: 0;\r\n  position: absolute;\r\n  white-space: nowrap;\r\n  width: 1px;\r\n`;\r\n\r\nconst StyledCheckbox = styled.div`\r\n  display: inline-block;\r\n  width: 16px;\r\n  height: 16px;\r\n  margin-right: 15px;\r\n  background: ${props => (props.checked ? \"#f5f5f5\" : \"white\")};\r\n  border-radius: 3px;\r\n  border: solid 1px ${colors.fontColor};\r\n  transition: all 300ms;\r\n  cursor: pointer;\r\n\r\n  :hover {\r\n    background: #f5f5f5;\r\n  }\r\n\r\n  ${Icon} {\r\n    visibility: ${props => (props.checked ? \"visible\" : \"hidden\")};\r\n  }\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}