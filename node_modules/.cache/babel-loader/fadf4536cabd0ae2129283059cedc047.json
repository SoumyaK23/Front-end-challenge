{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/soumyakrishnamurthy/Documents/Cord/FE Challenge/front-end-test-cord/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";import _asyncToGenerator from\"/Users/soumyakrishnamurthy/Documents/Cord/FE Challenge/front-end-test-cord/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _classCallCheck from\"/Users/soumyakrishnamurthy/Documents/Cord/FE Challenge/front-end-test-cord/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/soumyakrishnamurthy/Documents/Cord/FE Challenge/front-end-test-cord/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _assertThisInitialized from\"/Users/soumyakrishnamurthy/Documents/Cord/FE Challenge/front-end-test-cord/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";import _inherits from\"/Users/soumyakrishnamurthy/Documents/Cord/FE Challenge/front-end-test-cord/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/Users/soumyakrishnamurthy/Documents/Cord/FE Challenge/front-end-test-cord/node_modules/@babel/runtime/helpers/esm/createSuper.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6;import _regeneratorRuntime from\"/Users/soumyakrishnamurthy/Documents/Cord/FE Challenge/front-end-test-cord/node_modules/@babel/runtime/regenerator/index.js\";/* This file contains functions that preload the page with movies list and genres.\r\nWhen searched by name and year, results should be displayed */import React from\"react\";import styled from'styled-components';import*as fetcher from\"../../fetcher\";import SearchFilters from\"../../components/searchfilter\";import MovieList from\"../../components/movielist\";import Bars from\"../../images/bars.png\";import Times from\"../../images/times.png\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Discover=/*#__PURE__*/function(_React$Component){_inherits(Discover,_React$Component);var _super=_createSuper(Discover);function Discover(props){var _this;_classCallCheck(this,Discover);_this=_super.call(this,props);_this.state={menuOpen:false,keyword:'',year:0,results:[],totalCount:0,genres:[/* get some genres as example */{id:28,name:'Action'},{id:12,name:'Adventure'},{id:16,name:'Animation'},{id:35,name:'Comedy'},{id:80,name:'Crime Film'},{id:99,name:'Documentary'},{id:10,name:'Drama'},{id:14,name:'Family'},{id:36,name:'History'},{id:15,name:'TV Movie'}],ratings:[{id:7.5,name:7.5},{id:8,name:8},{id:8.5,name:8.5},{id:9,name:9},{id:9.5,name:9.5},{id:10,name:10}],languages:[{id:'EN',name:'English'},{id:'he-IN',name:'Hindi'},{id:'zh-CN',name:'Chinese'},{id:'FR',name:'French'},{id:'ES',name:'Spanish'}]};_this.openMenu=_this.openMenu.bind(_assertThisInitialized(_this));return _this;}// function to preload genre list and trending movies when page loads\n_createClass(Discover,[{key:\"componentDidMount\",value:function(){var _componentDidMount=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var genresList,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetcher.getGenresList();case 2:genresList=_context.sent;this.setState({genreOptions:genresList});// prelaod trending movies\n_context.next=6;return fetcher.getTrendingMovies();case 6:data=_context.sent;this.setState({results:data.results,totalCount:data.total_results});case 8:case\"end\":return _context.stop();}}},_callee,this);}));function componentDidMount(){return _componentDidMount.apply(this,arguments);}return componentDidMount;}()// function to trigger the API request and load the search results based on the name and year given as parameters\n},{key:\"searchMovies\",value:function(){var _searchMovies=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(keyword,year){var data;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return fetcher.getMovies(keyword,year);case 2:data=_context2.sent;if(data!=undefined){this.setState({results:data.results,totalCount:data.total_results});}else{this.setState({results:[],totalCount:0});}case 4:case\"end\":return _context2.stop();}}},_callee2,this);}));function searchMovies(_x,_x2){return _searchMovies.apply(this,arguments);}return searchMovies;}()},{key:\"openMenu\",value:function openMenu(){var links=document.querySelector('#navbar');var menuOpen=this.state;console.log(menuOpen);if(!menuOpen.menuOpen){links.style.display='block';this.setState({menuOpen:true});}else{links.style.display='none';this.setState({menuOpen:false});}}},{key:\"render\",value:function render(){var _this2=this;var _this$state=this.state,genres=_this$state.genres,languages=_this$state.languages,ratings=_this$state.ratings,totalCount=_this$state.totalCount,results=_this$state.results,menuOpen=_this$state.menuOpen;return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"a\",{onClick:function onClick(){return _this2.openMenu();},children:[/*#__PURE__*/_jsx(Navbars,{src:menuOpen?Bars:Times,id:\"bars\"}),\" \"]}),/*#__PURE__*/_jsxs(DiscoverWrapper,{children:[/*#__PURE__*/_jsx(MobilePageTitle,{children:\"Discover\"}),\" \",/*#__PURE__*/_jsx(MovieFilters,{children:/*#__PURE__*/_jsx(SearchFilters,{genres:genres,ratings:ratings,languages:languages,searchMovies:function searchMovies(keyword,year){return _this2.searchMovies(keyword,year);}})}),/*#__PURE__*/_jsxs(MovieResults,{children:[totalCount>0&&/*#__PURE__*/_jsxs(TotalCounter,{children:[totalCount,\" results\"]}),/*#__PURE__*/_jsx(MovieList,{movies:results||[]})]})]})]});}}]);return Discover;}(React.Component);export{Discover as default};var DiscoverWrapper=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: row;\\n  padding: 40px 40px;\\n  @media (max-width: 992px) {\\n    flex-direction: column-reverse;\\n    padding: 20px 5px 5px 5px;\\n  }\\n\"])));var TotalCounter=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  font-weight: 900;\\n  height: 30px;\\n  margin-bottom: 20px;\\n\"])));var MovieResults=styled.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  order: 1;\\n  flex-basis: 60%;\\n  @media (min-width: 769px) {\\n    margin-right: 15px;\\n  }\\n\"])));var MovieFilters=styled.div(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  order: 2;\\n  flex-basis: 40%;\\n  margin: 40px 0px 20px;\\n\"])));var MobilePageTitle=styled.header(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  order: 3;\\n  font-size: 1.6em;\\n  font-weight: bold;\\n  margin: 0px 10px 0px 10px;\\n  @media (min-width: 769px) {\\n    display: none;\\n  }\\n\"])));var Navbars=styled.img(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\nfloat: right;\\npadding: 30px 30px 0px 30px;\\nheight: 30px;\\nweight:30px;\\n\"])));","map":{"version":3,"sources":["/Users/soumyakrishnamurthy/Documents/Cord/FE Challenge/front-end-test-cord/src/pages/discover/index.js"],"names":["React","styled","fetcher","SearchFilters","MovieList","Bars","Times","Discover","props","state","menuOpen","keyword","year","results","totalCount","genres","id","name","ratings","languages","openMenu","bind","getGenresList","genresList","setState","genreOptions","getTrendingMovies","data","total_results","getMovies","undefined","links","document","querySelector","console","log","style","display","searchMovies","Component","DiscoverWrapper","div","TotalCounter","MovieResults","MovieFilters","MobilePageTitle","header","Navbars","img"],"mappings":"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","sourcesContent":["/* This file contains functions that preload the page with movies list and genres.\r\nWhen searched by name and year, results should be displayed */ \r\n\r\nimport React from \"react\";\r\nimport styled from 'styled-components';\r\n\r\nimport * as fetcher from \"../../fetcher\";\r\n\r\nimport SearchFilters from \"../../components/searchfilter\";\r\nimport MovieList from \"../../components/movielist\";\r\n\r\nimport Bars from \"../../images/bars.png\";\r\nimport Times from \"../../images/times.png\";\r\n\r\nexport default class Discover extends React.Component {\r\n  constructor (props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      menuOpen: false,\r\n      keyword: '',\r\n      year: 0,\r\n      results: [],\r\n      totalCount: 0,\r\n      genres: [ /* get some genres as example */\r\n        {id: 28, name: 'Action'},\r\n        {id: 12, name: 'Adventure'},\r\n        {id: 16, name: 'Animation'},\r\n        {id: 35, name: 'Comedy'},\r\n        {id: 80, name: 'Crime Film'},\r\n        {id: 99, name: 'Documentary'},\r\n        {id: 10, name: 'Drama'},\r\n        {id: 14, name: 'Family'},\r\n        {id: 36, name: 'History'},\r\n        {id: 15, name: 'TV Movie'},\r\n      ],\r\n      ratings: [\r\n        { id: 7.5, name: 7.5 },\r\n        { id: 8, name: 8 },\r\n        { id: 8.5, name: 8.5 },\r\n        { id: 9, name: 9 },\r\n        { id: 9.5, name: 9.5 },\r\n        { id: 10, name: 10 }\r\n      ],\r\n      languages: [\r\n        { id: 'EN', name: 'English' },\r\n        { id: 'he-IN', name: 'Hindi' },\r\n        { id: 'zh-CN', name: 'Chinese' },\r\n        { id: 'FR', name: 'French' },\r\n        { id: 'ES', name: 'Spanish' }\r\n      ]\r\n    };\r\n    this.openMenu = this.openMenu.bind(this)\r\n  }\r\n\r\n  // function to preload genre list and trending movies when page loads\r\n  async componentDidMount() {\r\n    // preload genre list\r\n    const genresList = await fetcher.getGenresList();\r\n    this.setState({ genreOptions: genresList });\r\n\r\n    // prelaod trending movies\r\n    const data = await fetcher.getTrendingMovies();\r\n    this.setState({ results: data.results, totalCount: data.total_results }); \r\n  }\r\n\r\n  // function to trigger the API request and load the search results based on the name and year given as parameters\r\n  async searchMovies(keyword, year) {\r\n    const data = await fetcher.getMovies(keyword, year);\r\n    if (data != undefined) {\r\n      this.setState({\r\n        results: data.results,\r\n        totalCount: data.total_results\r\n      });\r\n    } else {\r\n      this.setState({\r\n        results: [],\r\n        totalCount: 0\r\n      });\r\n    }\r\n  }\r\n\r\n  openMenu() {\r\n    const links = document.querySelector('#navbar')\r\n    const menuOpen = this.state\r\n    console.log(menuOpen);\r\n\r\n    if (!menuOpen.menuOpen) {\r\n      links.style.display = 'block'\r\n      this.setState({ menuOpen: true })\r\n    } else {\r\n      links.style.display = 'none'\r\n      this.setState({ menuOpen: false })\r\n    }\r\n\r\n  }\r\n\r\n  render () {\r\n    const { genres, languages, ratings, totalCount, results, menuOpen } = this.state;\r\n\r\n    return (\r\n      <>\r\n      <a onClick={()=>this.openMenu()} ><Navbars src={menuOpen? Bars : Times} id=\"bars\" /> </a>\r\n      <DiscoverWrapper>\r\n        <MobilePageTitle>Discover</MobilePageTitle> {/* MobilePageTitle should become visible on small screens & mobile devices*/}\r\n        <MovieFilters>\r\n          <SearchFilters \r\n            genres={genres} \r\n            ratings={ratings}  \r\n            languages={languages}\r\n            searchMovies={(keyword, year) => this.searchMovies(keyword, year)}\r\n          />\r\n        </MovieFilters>\r\n        <MovieResults>\r\n          { totalCount > 0 && <TotalCounter>{totalCount} results</TotalCounter>}\r\n          <MovieList \r\n            movies={results || []}\r\n          />\r\n        </MovieResults>\r\n      </DiscoverWrapper>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nconst DiscoverWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  padding: 40px 40px;\r\n  @media (max-width: 992px) {\r\n    flex-direction: column-reverse;\r\n    padding: 20px 5px 5px 5px;\r\n  }\r\n`;\r\n\r\nconst TotalCounter = styled.div`\r\n  font-weight: 900;\r\n  height: 30px;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst MovieResults = styled.div`\r\n  order: 1;\r\n  flex-basis: 60%;\r\n  @media (min-width: 769px) {\r\n    margin-right: 15px;\r\n  }\r\n`;\r\n\r\nconst MovieFilters = styled.div`\r\n  order: 2;\r\n  flex-basis: 40%;\r\n  margin: 40px 0px 20px;\r\n`;\r\n\r\nconst MobilePageTitle = styled.header`\r\n  order: 3;\r\n  font-size: 1.6em;\r\n  font-weight: bold;\r\n  margin: 0px 10px 0px 10px;\r\n  @media (min-width: 769px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst Navbars = styled.img`\r\nfloat: right;\r\npadding: 30px 30px 0px 30px;\r\nheight: 30px;\r\nweight:30px;\r\n`;\r\n\r\n"]},"metadata":{},"sourceType":"module"}